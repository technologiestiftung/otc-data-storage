// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// datasource db {
//   provider = "sqlite"
//   url = "***"
// }

datasource db {
  provider = "postgresql"
  url = "***"
}

generator client {
  provider = "prisma-client-js"
}

generator dbml {
  provider = "prisma-dbml-generator"
}

model Camera {
  id                   Int                  @default(autoincrement()) @id
  createdAt            DateTime             @default(now())
  active               Boolean
  name                 String
  location             String
  timezone             Int
  transformationMatrix String?
  owner                String?
  software             String?
  softwareHistory      String?
  hardware             String?
  // Geometry(Point, 4326)
  geom                 String?
  // Geometry(Line, 4326)
  angle                String?
  counters             Counter[]
  trajectories         Trajectory[]
  weathers             Weather[]
  lightningConditions  LightningCondition[]
}

model Counter {
  id        Int      @default(autoincrement()) @id
  createdAt DateTime @default(now())
  active    Boolean
  camera    Camera   @relation(fields: [cameraId], references: [id])
  cameraId  Int
  street    String
  streetId  String // or Int?
  x1        Float
  y1        Float
  x2        Float
  y2        Float


  // Geometry(Line, 4326)
  line       String
  // Geometry(Line, 4326)
  direction  String
  detections Detection[]
}

model Detection {
  id              Int           @default(autoincrement()) @id
  createdAt       DateTime      @default(now())
  detectedAt      DateTime
  counter         Counter       @relation(fields: [counterId], references: [id])
  counterId       Int
  detectionType   DetectionType @relation(fields: [detectionTypeId], references: [id])
  detectionTypeId Int
  accuracy        Float
  x               Float
  y               Float
}

model DetectionType {
  id           Int          @default(autoincrement()) @id
  label        String
  description  String?
  detections   Detection[]
  trajectories Trajectory[]
}

model Trajectory {
  id         Int    @default(autoincrement()) @id
  camera     Camera @relation(fields: [cameraId], references: [id])
  cameraId   Int
  // Geometry(LineStringM, CUSTOM_ID)
  trajectory String

  // Geometry(LineStringM, 4326)
  geom            String
  detectionType   DetectionType @relation(fields: [detectionTypeId], references: [id])
  detectionTypeId Int
  start           DateTime
  end             DateTime
}

model Weather {
  id            Int      @default(autoincrement()) @id
  camera        Camera   @relation(fields: [cameraId], references: [id])
  cameraId      Int
  createdAt     DateTime @default(now())
  recordedAt    DateTime
  humidity      Float?
  pressure      Float?
  cloudCoverage Float?
  rain          Float?
  temperature   Float?
  wind          Float?
  windDirection Float?
}

model LightningCondition {
  id         Int      @default(autoincrement()) @id
  camera     Camera   @relation(fields: [cameraId], references: [id])
  cameraId   Int
  createdAt  DateTime @default(now())
  recordedAt DateTime
  value      Float
}

model User {
  id       Int     @id @default(autoincrement())
  email    String  @unique
  password String
  name     String?
}
